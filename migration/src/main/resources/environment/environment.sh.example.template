#
# This file was automatically generated by
# [ICM Migration Support](https://github.com/intershop/icm-migration-support)
#   tool "Create Environment Example Files"
#     (001_migration_7x10_to_11/901_CreateEnvironmentExampleFiles.yml)
#

##############################################################################
#
#  Sample of a development environment.
#  This file can be used to initialize your build shell,
#  formerly known as Developer Console.
#  You have to adapt it to fit your environment/needs!
#
##############################################################################

# Make sure GRADLE_USER_HOME is defined
#  Hint: You can either have a single GRADLE_USER_HOME for all your projects (mostly the case) or separate GRADLE_USER_HOMEs for each project (recommended)
export GRADLE_USER_HOME=~/.gradle

# Set repoUser/repoPassword as well as localVersion in your $GRADLE_USER_HOME/gradle.properties
#  $GRADLE_USER_HOME/gradle.properties: repoUser=[your Azure DevOps user name here] (e.g. XXxxxxxx@intershop.com)
#  $GRADLE_USER_HOME/gradle.properties: repoPassword=[your Azure Personal Access Token (PAT) here] (e.g. ekp**********************************************rnq)
#   Hint: You can create one Azure Personal Access Token (PAT) for all your Azure DevOps (ADO) projects (Access scope: Global access / All accessible organizations)
#  $GRADLE_USER_HOME/gradle.properties: localVersion=true
#   (This is to avoid old code versions to be used by the app server and to avoid the messages during startAS like: "WARN: Found multiple jar files in: {cartridge}...")

# Optional: Check validity of your Azure Personal Access Token (PAT) for the Azure DevOps (ADO) organization <adoOrganizationName>
# Attention: If it fails ("Failed to authenticate using the supplied token."), you cannot access this ADO organization anymore (https://dev.azure.com/<adoOrganizationName>/), even in the browser!
#echo [your Azure Personal Access Token (PAT) here] | az devops login --organization https://dev.azure.com/<adoOrganizationName>/

# Make sure OpenJDK 21 is used. (ICM11: OpenJDK 17, ICM12/13: OpenJDK 21)
export JAVA_HOME=/usr/lib/jvm/java-21-openjdk-21.0.7.0.6-2.el8.x86_64

# Configure the directory containing the license.xml (LICENSEDIR)
export LICENSEDIR=~/dev/<rootProject.name in settings.gradle.kts>

# Configure the directory containing the icm.properties (CONFIGDIR)
#
# The default path to icm.properties is: CONFIGDIR=$GRADLE_USER_HOME/icm-default/conf
# But since you can have more than one ICM11+ project on your computer and more than one app server per project,
# it is recommended to use project / Docker container specific icm.properties file locations!
# You should use the rootProject.name defined in settings.gradle.kts (also used as containerProjectPrefix for the Docker containers).
export CONFIGDIR=$GRADLE_USER_HOME/<rootProject.name in settings.gradle.kts>/conf

# IStudio - WORKSPACE
export WORKSPACE=~/dev/<rootProject.name in settings.gradle.kts>/workspace

# IStudio releases: https://knowledge.intershop.com/prd/index.php/Product/41762aa5-2396-11e9-a617-0050568a6a29
# IStudio versions recommended for ICM11/12/13: 4.30.2 (no official support for ICM13), 4.35.0 (latest GA), 4.36.0 (with AI support by GitHub Copilot)
#
# IStudio - set alias openStudio and use a dedicated workspace for each IStudio version and project (and may be even branch)
alias     openStudio='~/dev/apps/IntershopStudio_4.36.0/IntershopStudio -data $WORKSPACE/<rootProject.name in settings.gradle.kts>_IStudio4.36.0'
alias openStudio4360='~/dev/apps/IntershopStudio_4.36.0/IntershopStudio -data $WORKSPACE/<rootProject.name in settings.gradle.kts>_IStudio4.36.0'
alias openStudio4350='~/dev/apps/IntershopStudio_4.35.0/IntershopStudio -data $WORKSPACE/<rootProject.name in settings.gradle.kts>_IStudio4.35.0'
alias openStudio4302='~/dev/apps/IntershopStudio_4.30.2/IntershopStudio -data $WORKSPACE/<rootProject.name in settings.gradle.kts>_IStudio4.30.2'

# dozzle - Docker log viewer - configured to host port 8888 by default.
# Check container "dozzle" is running in Docker Desktop, open http://localhost:8888 in browser.
alias dozzle='docker run --name dozzle --detach --volume=/var/run/docker.sock:/var/run/docker.sock -p 8888:8080 amir20/dozzle:latest'

# set explicit docker endpoint for default context because otherwise gradle deployed containers are deployed to regular 'default' endpoint
# instead of 'desktop-linux' specific endpoint while docker desktop actively sets 'desktop-linux' as its context to be used and refuses to
# accept any adjustment via 'config.json' or 'daemon.json'
#
# > docker context ls
#NAME            DESCRIPTION                               DOCKER ENDPOINT                                    ERROR
#default *       Current DOCKER_HOST based configuration   unix:///home/johndoe/.docker/desktop/docker.sock   
#desktop-linux   Docker Desktop                            unix:///home/johndoe/.docker/desktop/docker.sock   
#Warning: DOCKER_HOST environment variable overrides the active context. To use a context, either set the global --context flag, or unset DOCKER_HOST environment variable.
#
export DOCKER_HOST="unix://$HOME/.docker/desktop/docker.sock"

# start docker desktop, if not already running
docker desktop start

# Add date/time and current working directory to the prompt
PS1='[\[\033[37m\]\D{%Y-%m-%d %H:%M}\[\033[00m\]|\[\033[36m\]\u@\H\[\033[00m\]|\[\033[33m\]\W\[\033[00m\]]$ '

# Intershop Docker registry https://docker.tools.intershop.com (Harbor) "Username" AND "CLI secret"
# See https://knowledge.intershop.com/kb/index.php/Display/30669A "Guide - Access to Intershop Docker Images"
docker login docker.tools.intershop.com -u [your Intershop Docker registry Username here, e.g. X.Xxxxxxx@intershop.de] -p [your CLI secret here]

# Use Azure Command-Line Client to login into Azure and into Azure Container Registry
az login
az acr login --name <ishprjxxacr>

echo '--------------------------------------------------------------------------'
echo 'gradlew startWebServer           (= startWA + startWAA, see https://github.com/IntershopCommunicationsAG/icm-docker-plugin/blob/master/README.asciidoc#DockerPluginTasks)'
echo 'gradlew startSolrCloud'
echo 'gradlew startMailSrv'
echo 'gradlew startWebServer startMailSrv startSolrCloud && docker run --name dozzle --detach --volume=/var/run/docker.sock:/var/run/docker.sock -p 8888:8080 amir20/dozzle:latest'
echo '                                 (execute commands in a row)'
echo 'gradlew startAS                  (builds, publishes, deploys and starts the AppServer in Docker and runs dbPrepare)'
echo 'gradlew stopAS createAS --debug-icm=true startAS0'
echo '                                 (execute multiple Gradle tasks, restart AS and enable Java debugging - debug port see intershop.as.debug.port in icm.properties)'
echo 'gradlew startContainer           (for debugging in case of AS failure: starts the docker AS container, but does not run AS)'
echo 'gradlew stop*                    (* stands for WebServer, AS, Container, WA, WAA, ...)'
echo '--------------------------------------------------------------------------'
echo 'dozzle                           (docker run --name dozzle --detach --volume=/var/run/docker.sock:/var/run/docker.sock -p 8888:8080 amir20/dozzle:latest)'
echo '--------------------------------------------------------------------------'
echo 'openStudio                       (open Intershop Studio:)'
echo 'openStudio4360                   (~/dev/apps/IntershopStudio_4.36.0/IntershopStudio -data $WORKSPACE/<rootProject.name in settings.gradle.kts>_IStudio4.36.0)'
echo 'openStudio4350                   (~/dev/apps/IntershopStudio_4.35.0/IntershopStudio -data $WORKSPACE/<rootProject.name in settings.gradle.kts>_IStudio4.35.0)'
echo 'openStudio4302                   (~/dev/apps/IntershopStudio_4.30.2/IntershopStudio -data $WORKSPACE/<rootProject.name in settings.gradle.kts>_IStudio4.30.2)'
echo '--------------------------------------------------------------------------'
echo
